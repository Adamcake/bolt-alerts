import{a4 as at,a5 as ot,M as lt,N as st,O as f,g as a,U as rt,V as m,W as z,X as s,_ as w,a0 as D,Y as y,Z as it,x as c,$ as nt,a1 as ct,a3 as dt}from"./legacy-mJe-Rq-b.js";import{b as P,a as T}from"./input-BmSXsotX.js";function r(l,o,e,i){var n=l.__attributes??(l.__attributes={});n[o]!==(n[o]=e)&&(e==null?l.removeAttribute(o):typeof e!="string"&&pt(l).includes(o)?l[o]=e:l.setAttribute(o,e))}var G=new Map;function pt(l){var o=G.get(l.nodeName);if(o)return o;G.set(l.nodeName,o=[]);for(var e,i=l,n=Element.prototype;n!==i;){e=ot(i);for(var d in e)e[d].set&&o.push(d);i=at(i)}return o}const ut=(l,o)=>fetch("https://bolt-api/send-message",{method:"POST",body:o()}),bt=()=>fetch("https://bolt-api/close-request");var ft=m('<p class="text-[16pt] font-bold">New Ruleset</p> <p class="text-[10pt]">A ruleset decides how you want to be alerted. It can have any number of rules in it and the alert will be sent when any of those rules becomes active.</p>',1),ht=m('<p class="text-[16pt] font-bold">Edit Ruleset</p>'),vt=(l,o,e)=>{a(o)?c(e,"ding.wav"):c(e,null)},_t=m('<br> <label for="5" class="font-italic">Sound name:</label> <br> <input id="5" type="text" class="border-gray-200 text-[12pt] border-1 w-full max-w-[260px] px-[3px] py-[2px] border-black focus:border-3 focus:px-[1px] focus:py-0 disabled:border-gray-500"> <br> <label for="6" class="font-italic"> </label> <br> <input id="6" type="range">',1),wt=m('<div class="mx-2 my-1 p-0 b-0 text-gray-200"><!> <hr class="my-4 opacity-40"> <div class="text-[8pt] w-auto select-none"><label for="1" class="font-italic">Ruleset name:</label> <br> <input id="1" type="text" class="border-gray-200 text-[12pt] border-1 w-full max-w-[260px] px-[3px] py-[2px] border-black focus:border-3 focus:px-[1px] focus:py-0"> <br><br> <input id="2" type="checkbox"> <label for="2" class="font-italic">Alert only if unfocused</label> <br><br> <input id="3" type="checkbox"> <label for="3" class="font-italic">Flash window</label> <br><br> <input id="4" type="checkbox"> <label for="4" class="font-italic">Play a sound</label> <!></div> <span><button class="w-25 bg-red-500 rounded-sm py-1 px-2 mr-1 mt-4 font-bold text-white text-center hover:opacity-75">Cancel</button> <button class="w-25 bg-blue-500 rounded-sm py-1 px-2 mt-4 font-bold text-white text-center enabled:hover:opacity-75 disabled:bg-gray-500">Save</button></span></div>');function yt(l,o){st(o,!1);let e=new URLSearchParams(window.location.search),i=e.get("volume"),n=e.get("id"),d=f(e.get("name")??"New Ruleset"),g=f(e.get("only_if_unfocused")==="1"),x=f(e.get("flash_window")==="1"),p=f(e.get("sound")),u=f(a(p)!==null),h=f(i?parseInt(i):100);const U="how this ruleset will be identified in the main window",A="if checked, alert only if the game window is out-of-focus, otherwise always alert",I="if checked, flash in the taskbar when this ruleset alerts",V="if checked, play a sound when this ruleset alerts (more sound options below)",W="name of the sound file in the sounds directory",H=()=>{let t={name:a(d),flash_window:a(x)?"1":"0",volume:a(h).toString(),only_if_unfocused:a(g)?"1":"0"};return a(u)&&a(p)&&(t.sound=a(p)),n&&(t.id=n),"\0".concat(new URLSearchParams(t).toString())};rt();var E=wt(),F=w(E);{var J=t=>{var b=ft();y(t,b)},K=t=>{var b=ht();y(t,b)};z(F,t=>{n===null?t(J):t(K,!1)})}var L=s(F,4),M=w(L);r(M,"title",U);var k=s(M,4);r(k,"title",U);var S=s(k,5);r(S,"title",A);var O=s(S,2);r(O,"title",A);var R=s(O,5);r(R,"title",I);var q=s(R,2);r(q,"title",I);var v=s(q,5);r(v,"title",V),v.__change=[vt,u,p];var B=s(v,2);r(B,"title",V);var Q=s(B,2);{var $=t=>{var b=_t(),Y=s(nt(b),2);r(Y,"title",W);var _=s(Y,4);_.disabled=!0,r(_,"title",W);var Z=s(_,4),et=w(Z),j=s(Z,4);D(()=>{ct(et,`Volume: ${a(h)??""}%`),j.disabled=!a(u)}),P(_,()=>a(p),N=>c(p,N)),P(j,()=>a(h),N=>c(h,N)),y(t,b)};z(Q,t=>{a(u)&&t($)})}var tt=s(L,2),C=w(tt);C.__click=[bt];var X=s(C,2);X.__click=[ut,H],D(()=>X.disabled=a(d).length===0),P(k,()=>a(d),t=>c(d,t)),T(S,()=>a(g),t=>c(g,t)),T(R,()=>a(x),t=>c(x,t)),T(v,()=>a(u),t=>c(u,t)),y(l,E),it()}lt(["change","click"]);dt(yt,{target:document.body});
