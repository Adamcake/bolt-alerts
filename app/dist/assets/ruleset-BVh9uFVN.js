import{a4 as lt,a5 as rt,N as it,Z as u,g as e,T as nt,U as w,$ as z,V as o,Y as m,a0 as D,a6 as G,W as y,X as dt,x as b,_ as ct,a1 as pt,a3 as ut}from"./legacy-CU8Tr-xf.js";import{b as T,a as P}from"./input-DC386QVD.js";function r(l,s,a,i){var n=l.__attributes??(l.__attributes={});n[s]!==(n[s]=a)&&(a==null?l.removeAttribute(s):typeof a!="string"&&bt(l).includes(s)?l[s]=a:l.setAttribute(s,a))}var H=new Map;function bt(l){var s=H.get(l.nodeName);if(s)return s;H.set(l.nodeName,s=[]);for(var a,i=l,n=Element.prototype;n!==i;){a=rt(i);for(var d in a)a[d].set&&s.push(d);i=lt(i)}return s}var ft=w('<p class="text-[16pt] font-bold">New Ruleset</p> <p class="text-[10pt]">A ruleset decides how you want to be alerted. It can have any number of rules in it and the alert will be sent when any of those rules becomes active.</p>',1),vt=w('<p class="text-[16pt] font-bold">Edit Ruleset</p>'),ht=w('<br> <label for="5" class="font-italic">Sound name:</label> <br> <input id="5" type="text" class="border-gray-200 text-[12pt] border-1 w-full max-w-[260px] px-[3px] py-[2px] border-black focus:border-3 focus:px-[1px] focus:py-0 disabled:border-gray-500"> <br> <label for="6" class="font-italic"> </label> <br> <input id="6" type="range">',1),mt=w('<div class="mx-2 my-1 p-0 b-0 text-gray-200"><!> <hr class="my-4 opacity-40"> <div class="text-[8pt] w-auto select-none"><label for="1" class="font-italic">Ruleset name:</label> <br> <input id="1" type="text" class="border-gray-200 text-[12pt] border-1 w-full max-w-[260px] px-[3px] py-[2px] border-black focus:border-3 focus:px-[1px] focus:py-0"> <br><br> <input id="2" type="checkbox"> <label for="2" class="font-italic">Alert only if unfocused</label> <br><br> <input id="3" type="checkbox"> <label for="3" class="font-italic">Flash window</label> <br><br> <input id="4" type="checkbox"> <label for="4" class="font-italic">Play a sound</label> <!></div> <span><button class="w-25 bg-red-500 rounded-sm py-1 px-2 mr-1 mt-4 font-bold text-white text-center hover:opacity-75">Cancel</button> <button class="w-25 bg-blue-500 rounded-sm py-1 px-2 mt-4 font-bold text-white text-center enabled:hover:opacity-75 disabled:bg-gray-500">Save</button></span></div>');function yt(l,s){it(s,!1);let a=new URLSearchParams(window.location.search),i=a.get("volume"),n=a.get("id"),d=u(a.get("name")??"New Ruleset"),_=u(a.get("only_if_unfocused")==="1"),x=u(a.get("flash_window")==="1"),f=u(a.get("sound")),c=u(e(f)!==null),v=u(i?parseInt(i):100);const U="how this ruleset will be identified in the main window",A="if checked, alert only if the game window is out-of-focus, otherwise always alert",I="if checked, flash in the taskbar when this ruleset alerts",V="if checked, play a sound when this ruleset alerts (more sound options below)",W="name of the sound file in the sounds directory",J=()=>{let t={name:e(d),flash_window:e(x)?"1":"0",volume:e(v).toString(),only_if_unfocused:e(_)?"1":"0"};return e(c)&&e(f)&&(t.sound=e(f)),n&&(t.id=n),"\0".concat(new URLSearchParams(t).toString())},K=()=>fetch("https://bolt-api/send-message",{method:"POST",body:J()}),Q=()=>fetch("https://bolt-api/close-request");nt();var E=mt(),F=m(E);{var $=t=>{var p=ft();y(t,p)},tt=t=>{var p=vt();y(t,p)};z(F,t=>{n===null?t($):t(tt,!1)})}var L=o(F,4),q=m(L);r(q,"title",U);var g=o(q,4);r(g,"title",U);var k=o(g,5);r(k,"title",A);var B=o(k,2);r(B,"title",A);var S=o(B,5);r(S,"title",I);var C=o(S,2);r(C,"title",I);var N=o(C,5);r(N,"title",V);var M=o(N,2);r(M,"title",V);var et=o(M,2);{var at=t=>{var p=ht(),Y=o(ct(p),2);r(Y,"title",W);var h=o(Y,4);r(h,"title",W);var Z=o(h,4),st=m(Z),j=o(Z,4);D(()=>{h.disabled=!e(c),pt(st,`Volume: ${e(v)??""}%`),j.disabled=!e(c)}),T(h,()=>e(f),R=>b(f,R)),T(j,()=>e(v),R=>b(v,R)),y(t,p)};z(et,t=>{e(c)&&t(at)})}var ot=o(L,2),O=m(ot),X=o(O,2);D(()=>X.disabled=e(d).length===0),T(g,()=>e(d),t=>b(d,t)),P(k,()=>e(_),t=>b(_,t)),P(S,()=>e(x),t=>b(x,t)),P(N,()=>e(c),t=>b(c,t)),G("click",O,Q),G("click",X,K),y(l,E),dt()}ut(yt,{target:document.body});
